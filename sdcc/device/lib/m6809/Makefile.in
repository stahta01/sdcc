# libc/m6809 Makefile

VPATH  = @srcdir@
srcdir = @srcdir@
top_builddir = @top_builddir@

LIB_TYPE     = @LIB_TYPE@

SCC = $(top_builddir)/bin/sdcc -mm6809 --max-allocs-per-node 25000
SAS = $(top_builddir)/bin/sdas6809

# override PORTDIR defined by super (parent) makefile
override PORTDIR = ../build/m6809

include $(srcdir)/../incl.mk

M6809_FLOAT = $(COMMON_FLOAT)

M6809_INT = $(COMMON_INT) \
  _divsint.c \
  _divuint.c \
  _modsint.c \
  _moduint.c

M6809_LONG = $(COMMON_LONG) \
  _mullong.c \
  _divulong.c

M6809_LONGLONG = $(COMMON_LONGLONG) \
  _rrulonglong.c \
  _rrslonglong.c \
  _rlulonglong.c \
  _rlslonglong.c \
  _mullonglong.c \
  _divslonglong.c \
  _divulonglong.c \
  _modslonglong.c \
  _modulonglong.c

M6809_SDCC = $(COMMON_SDCC) \
  __itoa.c \
  __ltoa.c \
  _spx.c \
  _startup.c \
  _strcmp.c \
  _strlen.c \
  _strcpy.c \
  __memcpy.c \
  memcpy.c \
  _memmove.c \
  _heap.c \
  sprintf.c \
  vprintf.c \
  atomic_flag_clear.c

M6809SOURCES = $(addprefix ../,$(M6809_FLOAT) $(M6809_INT) $(M6809_LONG) $(M6809_LONGLONG) $(M6809_SDCC))
M6809OBJECTS = $(patsubst %.c,%.rel,$(M6809_FLOAT) $(M6809_INT) $(M6809_LONG) $(M6809_LONGLONG) $(M6809_SDCC))

OBJ = _ret.rel _mulint.rel _setjmp.rel atomic_flag_test_and_set.rel

LIB = m6809.lib
CC = $(SCC)
AS = $(SAS)
ASFLAGS = -plosgff

CFLAGS = -I$(srcdir)/../../include -I. --std-c11

all: $(PORTDIR)/$(LIB)

$(PORTDIR)/$(LIB): $(OBJ) $(M6809OBJECTS) Makefile
ifeq ($(LIB_TYPE), SDCCLIB)
	rm -f $@; \
	$(top_builddir)/bin/sdcclib -a $@ $(OBJ) $(M6809OBJECTS)
else
  ifeq ($(LIB_TYPE), AR)
	$(top_builddir)/bin/sdar -rcSD $@ $(OBJ) $(M6809OBJECTS)
  else
    ifeq ($(LIB_TYPE), RANLIB)
	$(top_builddir)/bin/sdar -rcD $@ $(OBJ) $(M6809OBJECTS)
    else
	rm -f $@
	for i in $(basename $(OBJ) $(M6809OBJECTS)); do echo $$i >>$@; done
	cp $(OBJ) $(M6809OBJECTS) $(PORTDIR)
    endif
  endif
endif

%.rel: %.c
	$(CC) $(CFLAGS) -c $<

%.rel: ../%.c
	$(CC) $(CFLAGS) -c $<

clean:
	rm -f *.rel *.sym *.lst *~ $(CLEANSPEC) *.dump* *.asm *.lib

distclean: clean
	rm -f Makefile
